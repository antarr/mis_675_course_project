--DEFINE MEMBERS
DROP TABLE MEMBERS;
CREATE TABLE MEMBERS
(
  "id" NUMBER(10),
  first_name VARCHAR2(30 CHAR),
  last_name VARCHAR2(30 CHAR),
  address VARCHAR2(100 CHAR),
  city VARCHAR2(20 CHAR),
  state CHAR(2 CHAR),
  zipcode VARCHAR2(10 CHAR),
  phone_number VARCHAR2(13 CHAR),
  email VARCHAR2(35 CHAR),
  CONSTRAINT MEMBERS_PK PRIMARY KEY("id")
);
--CREATE MEMBERS ID SEQUENCE
DROP SEQUENCE MEMBERS_ID_SEQ;
CREATE  SEQUENCE MEMBERS_ID_SEQ
INCREMENT BY 1
START WITH 0
MINVALUE 0
NOMAXVALUE
NOCYCLE
ORDER
NOCACHE;
-- CREATE INSERT TRIGGER ON MEMBERS TABLE
-- THIS AUTO GENERATES IDENTIFIER
CREATE OR REPLACE TRIGGER MEMBER_INSERT
BEFORE INSERT ON MEMBERS
FOR EACH ROW 
BEGIN
  SELECT MEMBERS_ID_SEQ.NEXTVAL INTO :new."id" from dual;
END;
--DEFINE DONATIONS
DROP TABLE DONATIONS;
CREATE TABLE DONATIONS
(
  "id" NUMBER(10),
  member_id NUMBER(10),
  amount number(9,2),
  date_given DATE,
  donation_type VARCHAR2(20 CHAR),
  CONSTRAINT DONATIONS_PK PRIMARY KEY("id"),
  CONSTRAINT DONATION_MEMBER_ID_FK FOREIGN KEY(member_id) REFERENCES MEMBERS("id")
);
--DONATIONS ID SEQUENCE
DROP SEQUENCE DONATIONS_ID_SEQ;
CREATE  SEQUENCE DONATIONS_ID_SEQ
INCREMENT BY 1
START WITH 0
MINVALUE 0
NOMAXVALUE
NOCYCLE
ORDER
NOCACHE;
--TRIGGERS DONATIONS ID SEQUENCES ON INSERT
CREATE OR REPLACE TRIGGER DONATION_INSERT
BEFORE INSERT ON DONATIONS
FOR EACH ROW 
BEGIN
  SELECT DONATIONS_ID_SEQ.NEXTVAL INTO :new."id" from dual;
END;
--DEFINE EVENTS
DROP TABLE "EVENTS";
CREATE TABLE "EVENTS"
(
  "id" NUMBER(10),
  "name" VARCHAR2(50 CHAR),
  estimated_cost NUMBER(10,2),
  actual_cost NUMBER(10,2),
  comments VARCHAR2(255 CHAR),
  CONSTRAINT EVENTS_PK PRIMARY KEY("id")
);
--CREATED EVENTS ID SEQUENCE
DROP SEQUENCE EVENTS_ID_SEQ;
CREATE  SEQUENCE EVENTS_ID_SEQ
INCREMENT BY 1
START WITH 0
MINVALUE 0
NOMAXVALUE
NOCYCLE
ORDER
NOCACHE;
--TRIGGER EVENTS ID SEQUENCE ON INSERT
CREATE OR REPLACE TRIGGER EVENTS_INSERT
BEFORE INSERT ON "EVENTS"
FOR EACH ROW 
BEGIN
  SELECT EVENTS_ID_SEQ.NEXTVAL INTO :new."id" from dual;
END;
--DEFINE JOIN TABLE FOR RELATING MEMBERS TO EVENTS
DROP TABLE EVENT_MEMBERS;
CREATE TABLE EVENT_MEMBERS
(
  event_id NUMBER(10),
  member_id NUMBER(10),
  CONSTRAINT EVENT_MEMBERS_PK PRIMARY KEY(event_id,member_id),
  CONSTRAINT EVENT_MEMBERS_EVENT_FK FOREIGN KEY(event_id) REFERENCES "EVENTS"("id"),
  CONSTRAINT EVENT_MEMBERS_MEMBER_FK FOREIGN KEY(member_id) REFERENCES "MEMBERS"("id")
);
--DEFINE VENDORS
DROP TABLE "VENDORS";
CREATE TABLE "VENDORS"
(
  "id" NUMBER(10),
  "name" VARCHAR2(50 CHAR),
  address VARCHAR2(100 CHAR),
  city VARCHAR2(20 CHAR),
  state char(2 CHAR),
  zipcode VARCHAR2(10 CHAR),
  phone_number VARCHAR2(13 CHAR),
  email VARCHAR2(35 CHAR),
  CONSTRAINT VENDORS_PK PRIMARY KEY("id")
);
--VENDOR ID SEQUENCE
DROP SEQUENCE VENDORS_ID_SEQ;
CREATE  SEQUENCE VENDORS_ID_SEQ
INCREMENT BY 1
START WITH 0
MINVALUE 0
NOMAXVALUE
NOCYCLE
ORDER
NOCACHE;
--TRIGGER VENDOR ID SEQUENCE ON INSERT
CREATE OR REPLACE TRIGGER VENDORS_INSERT
BEFORE INSERT ON "VENDORS"
FOR EACH ROW 
BEGIN
  SELECT VENDORS_ID_SEQ.NEXTVAL INTO :new."id" from dual;
END;
--DEFINE ACCOUNTS
DROP TABLE "ACCOUNTS";
CREATE TABLE "ACCOUNTS"
(
  "id" NUMBER(10),
  "name" VARCHAR2(30 CHAR),
  account_number VARCHAR2(20 CHAR),
  balance NUMBER(10,2),
  comments VARCHAR2(100 CHAR),
  account_type VARCHAR2(30 CHAR),
  CONSTRAINT ACCOUNTS_ID_PK PRIMARY KEY("id")
);
--VENDOR ID SEQUENCE
DROP SEQUENCE ACCOUNTS_ID_SEQ;
CREATE  SEQUENCE ACCOUNTS_ID_SEQ
INCREMENT BY 1
START WITH 0
MINVALUE 0
NOMAXVALUE
NOCYCLE
ORDER
NOCACHE;
--TRIGGER VENDOR ID SEQUENCE ON INSERT
CREATE OR REPLACE TRIGGER ACCOUNTS_INSERT
BEFORE INSERT ON "ACCOUNTS"
FOR EACH ROW 
BEGIN
  SELECT ACCOUNTS_ID_SEQ.NEXTVAL INTO :new."id" from dual;
END;
--DEFINE EXPENSES
DROP TABLE "EXPENSES";
CREATE TABLE "EXPENSES"
(
  "id" NUMBER(10),
  "name" VARCHAR2(30 CHAR),
  description VARCHAR2(255 CHAR),
  amount NUMBER(10,2),
  account_id NUMBER(10),
  date_of DATE,
  CONSTRAINT EXPENSES_ID_PK PRIMARY KEY("id"),
  CONSTRAINT EXPENSES_ACCOUNT_ID_FK FOREIGN KEY(account_id) REFERENCES ACCOUNTS("id")
);
--EXPENSES ID SEQUENCE
DROP SEQUENCE EXPENSES_ID_SEQ;
CREATE  SEQUENCE EXPENSES_ID_SEQ
INCREMENT BY 1
START WITH 0
MINVALUE 0
NOMAXVALUE
NOCYCLE
ORDER
NOCACHE;
--TRIGGER EXPENSES ID SEQUENCE ON INSERT
CREATE OR REPLACE TRIGGER EXPENSES_INSERT
BEFORE INSERT ON "EXPENSES"
FOR EACH ROW 
BEGIN
  SELECT EXPENSES_ID_SEQ.NEXTVAL INTO :new."id" from dual;
END;
--ADD PAYMENT METHOD TO EXPENSES
ALTER TABLE EXPENSES
ADD
(
  PAYMENT_METHOD VARCHAR2(25 CHAR)
);
--DEFINE MINISTRIES 
DROP TABLE "MINISTRIES";
CREATE TABLE "MINISTRIES"
(
  "id" NUMBER(10),
  "name" VARCHAR2(30 CHAR),
  meeting_time VARCHAR2(50 CHAR),
  meeting_day VARCHAR2(50 CHAR),
  dues_collected NUMBER(10,2),
  balance_available NUMBER(10,2),
  CONSTRAINT MINISTRIES_ID_PK PRIMARY KEY("id")
);
--MINISTRIES ID SEQUENCE
DROP SEQUENCE MINISTRIES_ID_SEQ;
CREATE  SEQUENCE MINISTRIES_ID_SEQ
INCREMENT BY 1
START WITH 0
MINVALUE 0
NOMAXVALUE
NOCYCLE
ORDER
NOCACHE;
--TRIGGER MINISTRIES ID SEQUENCE ON INSERT
CREATE OR REPLACE TRIGGER MINISTRIES_INSERT
BEFORE INSERT ON "MINISTRIES"
FOR EACH ROW 
BEGIN
  SELECT MINISTRIES_ID_SEQ.NEXTVAL INTO :new."id" from dual;
END;
--DEFINE MINISTRY_MEMBERS
CREATE TABLE MINISTRY_MEMBERS
(
  ministry_id NUMBER(10),
  member_id NUMBER(10),
  --USED MIN INSTEAD OF MINISTRY, IDENTIFIER CAN'T BE GREATER THAN 30 CHARACTERS
  CONSTRAINT MIN_MEMBERS_PK PRIMARY KEY(ministry_id, member_id),
  CONSTRAINT MIN_MEMBERS_MEMBER_ID_FK FOREIGN KEY(ministry_id) REFERENCES "MEMBERS"("id"),
  CONSTRAINT MIN_MEMBERS_MINISTRY_ID_FK FOREIGN KEY(ministry_id) REFERENCES "MINISTRIES"("id")
);
--DEFINE BUDGETS
DROP TABLE "BUDGETS";
CREATE TABLE "BUDGETS"
(
  "id" NUMBER(10),
  account_id NUMBER(10),
  "name" VARCHAR2(30),
  "limit" NUMBER(10,2) DEFAULT 0.00,
  start_date DATE default SYSDATE,
  end_date DATE,
  allocated_amount NUMBER(10,2),
  event_id number(10),
  CONSTRAINT BUDGET_ID_PK PRIMARY KEY("id"),
  CONSTRAINT BUDGET_ACCOUNT_ID_FK FOREIGN KEY(account_id) REFERENCES "ACCOUNTS"("id"),
  CONSTRAINT BUDGET_EVENT_ID_FK FOREIGN KEY(event_id) REFERENCES "EVENTS"("id")
);
--CREATE BUDGETS ID SEQUENCE
DROP SEQUENCE BUDGETS_ID_SEQ;
CREATE  SEQUENCE BUDGETS_ID_SEQ
INCREMENT BY 1
START WITH 0
MINVALUE 0
NOMAXVALUE
NOCYCLE
ORDER
NOCACHE;
--TRIGGER BUDGETS ID SEQUENCE ON INSERT
CREATE OR REPLACE TRIGGER BUDGETS_INSERT
BEFORE INSERT ON "BUDGETS"
FOR EACH ROW 
BEGIN
  SELECT BUDGETS_ID_SEQ.NEXTVAL INTO :new."id" from dual;
END;
--DEFINE BUDGET ITEMS
DROP TABLE "BUDGET_ITEMS";
CREATE TABLE "BUDGET_ITEMS"
(
  "id" NUMBER(10),
  budget_id NUMBER(10),
  "title" VARCHAR2(30),
  cost_per NUMBER(10,2) DEFAULT 0.00,
  quantity NUMBER(5),
  CONSTRAINT BUDGET_ITEM_ID_PK PRIMARY KEY("id"),
  CONSTRAINT BUDGET_ITEM_BUDGET_ID_FK FOREIGN KEY(budget_id) REFERENCES "BUDGETS"("id")
);
--CREATE BUDGET ITEMS ID SEQUENCE
DROP SEQUENCE BUDGET_ITEMS_ID_SEQ;
CREATE  SEQUENCE BUDGET_ITEMS_ID_SEQ
INCREMENT BY 1
START WITH 0
MINVALUE 0
NOMAXVALUE
NOCYCLE
ORDER
NOCACHE;
--TRIGGER BUDGET ITEMS ID SEQUENCE ON INSERT
CREATE OR REPLACE TRIGGER BUDGET_ITEMS_INSERT
BEFORE INSERT ON "BUDGET_ITEMS"
FOR EACH ROW 
BEGIN
  SELECT BUDGET_ITEMS_ID_SEQ.NEXTVAL INTO :new."id" from dual;
END;
--ADD VENDOR_ID T0 EXPENSES
ALTER TABLE
"EXPENSES"
ADD
(
  vendor_id NUMBER(10),
  CONSTRAINT EXPENSE_VENDOR_ID_FK FOREIGN KEY(vendor_id) REFERENCES "EXPENSES"("id")
);